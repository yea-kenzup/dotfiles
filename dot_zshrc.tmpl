ZSH_THEME="suvash"
# Only start tmux automatically if not running in VSCode or Cursor
# if [ -z "$TMUX" ] && [ "$TERM_PROGRAM" != "vscode" ] && [ "$TERM_PROGRAM" != "cursor" ]; then
# ZSH_THEME="skaro"
# tmux attach -t default || tmux new -s default
# fi

setopt prompt_subst
autoload -Uz vcs_info
# precmd() { 
#   vcs_info 
#   print -P "%~ ${vcs_info_msg_0_}\n"
# }
ZSH_CUSTOM=$HOME/.oh-my-zsh_custom
source ~/.zsh_aliases
zstyle ':omz:update' mode reminder  # just remind me to update when it's time
zstyle ':omz:update' frequency 30
zstyle ':vcs_info:*' enable git 
zstyle ':vcs_info:git:*' formats '%b%f %m%u%c %a'
zstyle ':vcs_info:*' check-for-changes true 
zstyle ':vcs_info:*' stagedstr ' +' 
zstyle ':vcs_info:*' unstagedstr ' !'

COMPLETION_WAITING_DOTS="true"
plugins=(
    git
    chezmoi
    )



export PATH=$HOME/bin:/usr/local/bin:$PATH
export PATH="$PATH:$HOME/.local/bin"
export PATH="$HOME/.shorebird/bin:$PATH"
export PATH="$HOME/.opencode/bin:$PATH"
export PATH="${KREW_ROOT:-$HOME/.krew}/bin:$PATH"
export BUN_INSTALL="$HOME/.bun"
export PATH="$BUN_INSTALL/bin:$PATH"
export PATH="$PATH:$HOME/.lmstudio/bin"
export ZSH="$HOME/.oh-my-zsh"
export PATH="$HOME/.codeium/windsurf/bin:$PATH"
export PATH="$PATH:$HOME/.rvm/bin"

export NVM_DIR=~/.nvm
export PYTHONDONTWRITEBYTECODE=1

### MANAGED BY RANCHER DESKTOP START (DO NOT EDIT)
export PATH="$HOME/.rd/bin:$PATH"
### MANAGED BY RANCHER DESKTOP END (DO NOT EDIT)


# history setup
setopt APPEND_HISTORY
setopt SHARE_HISTORY
HISTFILE=$HOME/.zhistory
SAVEHIST=1000
HISTSIZE=999
setopt HIST_EXPIRE_DUPS_FIRST
setopt EXTENDED_HISTORY
setopt histignorespace           # skip cmds w/ leading space from history
export HSTR_CONFIG=hicolor       # get more colors
bindkey -s "\C-f" "\C-a hstr -- \C-j"     # bind hstr to Ctrl-r (for Vi mode check doc)

source ~/.nvm/nvm.sh
[ -s "$HOME/.bun/_bun" ] && source "$HOME/.bun/_bun"


# **************** Completion ****************
# ************************************************
fpath=($HOME/.docker/completions $fpath)
fpath+=~/.zfunc; autoload -Uz compinit; compinit
autoload -U +X bashcompinit && bashcompinit
autoload -U compinit
compinit
complete -C '/usr/local/bin/aws_completer' aws
# autocompletion using arrow keys (based on history)
bindkey '\e[A' history-search-backward
bindkey '\e[B' history-search-forward
[[ -f $HOME/.dart-cli-completion/zsh-config.zsh ]] && . $HOME/.dart-cli-completion/zsh-config.zsh || true
source <(kubectl completion zsh)


[[ "$TERM_PROGRAM" == "kiro" ]] && . "$(kiro --locate-shell-integration-path zsh)"

# The next line updates PATH for the Google Cloud SDK.
if [ -f '/home/jboubix/google-cloud-sdk/path.zsh.inc' ]; then . '/home/jboubix/google-cloud-sdk/path.zsh.inc'; fi

# The next line enables shell command completion for gcloud.
if [ -f '/home/jboubix/google-cloud-sdk/completion.zsh.inc' ]; then . '/home/jboubix/google-cloud-sdk/completion.zsh.inc'; fi

# eval $(ssh-agent -s)
# ssh-add /home/jboubix/.ssh/id_ed25519
# . "$HOME/.local/bin/env"

# **************** OS SPECIFIC ****************
# ************************************************
# ******* MacOS  *********
# ************************************************
{{ if eq .chezmoi.os "darwin" -}}
export BROWSER="open -a 'Google Chrome'"
export EDITOR="code --wait"
export JAVA_HOME=$(/usr/libexec/java_home -v 20.0.1)
complete -o nospace -C /opt/homebrew/bin/terraform terraform
source $(brew --prefix nvm)/nvm.sh
export PATH="/opt/homebrew/opt/openjdk/bin:$PATH"
export PATH="/opt/homebrew/opt/openjdk@11/bin:$PATH"
export PATH="$HOME/Library/Android/sdk/tools:$PATH"
export PATH="$HOME/Library/Android/sdk/platform-tools:$PATH"
export ANDROID_SDK_ROOT="$HOME/Library/Android/sdk"

# ************************************************
# ******* Linux/WSL  *********
# ************************************************
{{ else if eq .chezmoi.os "linux" -}}
# git config --global core.sshCommand ssh.exe
export EDITOR="code --wait"
{{ end -}}

# **************** /OS SPECIFIC ****************
# eval $(ssh-agent -s)
# ssh-add ~/.ssh/jboubix
# ssh-add ~/.ssh/yea-kenzup
source $ZSH/oh-my-zsh.sh
export PULSE_SERVER=unix:/mnt/wslg/PulseServer


GH_TOKEN=
alias sr="GH_TOKEN={{ (onepasswordDetailsFields "dliddzdpd25phptdnop7sa5cci" "" "team-godzilla.1password.com").password.value }} python-semantic-release"
alias sryolo="sr -v version --push --vcs-release"


eval "$(zoxide init zsh)"
eval "$(/home/linuxbrew/.linuxbrew/bin/brew shellenv)"